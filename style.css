  /*
  Note: This page is not responsive and will not be formatted well on a smaller screen.
  */
  
  * {
    box-sizing: border-box;
  }
  
  html,
  body {
    color: #444;
    font-family: 'Helvetica', 'Verdana', sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    height: 100%;
    margin: 0;
    padding: 0;
    width: 100%;
  }
  
  html {
    overflow: hidden;
  }
  
  body {
    align-content: stretch;
    align-items: stretch;
    background: #ececec;
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: flex-start;
  }
  
  /**
   * Header
   */
  
  .header {
    align-content: center;
    align-items: stretch;
    background: #3f51b5;
    box-shadow:
      0 4px 5px 0 rgba(0, 0, 0, 0.14),
      0 2px 9px 1px rgba(0, 0, 0, 0.12),
      0 4px 2px -2px rgba(0, 0, 0, 0.2);
    color: #fff;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    font-size: 30px;
    height: 75px;
    justify-content: space-between;
    padding: 24px 16px 0 16px;
    position: fixed;
    transition: transform 0.233s cubic-bezier(0, 0, 0.21, 1) 0.1s;
    width: 100%;
    will-change: transform;
    z-index: 1000;
  }
  
  .header h1 {
    flex: 1;
    font-size: 24px;
    font-weight: 400;
    margin-left: 40px;
    margin-top: 0px;
  }

  #butConnect {
    display: block;
    width: 150px;
    margin-top: -12px;
    margin-right: 30px;
    height: 50px;
    font-size: 18px;
  }

  .notConnected {
    background-color: red;
    color: white;
  }
  
  /**
   * Main body
   */
  
  .main {
    flex: 1;
    overflow: hidden; /* Hide scrollbars */
    padding-top: 100px;
    padding-left: 1em;
    padding-right: 1em;
    margin-left: auto;
    margin-right: auto;
  }
  
  .hidden {
    display: none !important;
  }

  #exhibitInfo {
    display: flex;
    margin-top: 30px;
    margin-bottom: 30px;
    width: 800px;
    font-size: 24px;
  }

  .exhibitParagraph {
    margin-top: 30px;
    margin-bottom: 30px;
    width: 600px;
  }
  
  #notSupported {
    padding: 1em;
    background-color: red;
    color: white;
    margin-top: 1em;
    margin-bottom: 1em;
  }
  
  .pressed {
    background-color: #D81B60;  
    box-shadow: inset 0px 0px 5px #c1c1c1;
    outline: none;
  }

  .backButtons {
    position: relative;
    right: -1380px;
    top: -100px;
    font-size: 20px;
    padding-left: 15px;
    padding-right: 15px;
    padding-top: 10px;
    padding-bottom: 10px;
  }


  /**
   * Selectors
   */

   .buttonContainer {
     margin-left: 100px;
     display: flex;
     flex-direction: column;
     justify-content: space-around;
   }

   .eraSelector {
     border-radius: 6px;
     width: 500px;
     margin: 15px;
   }

   .dateRange {
    font-size: 36px;
    margin: 20px;
   }

   .periodName {
    font-size: 24px;
    margin: 20px;
   }

  /**
   * Graph
   */
  
  #my_dataviz {
    display: inline;
    padding-right: 50px;
  }


  /**
   * Countdown
   */

   #ready {
    font-size: 100px;
    position: absolute;
    width: 1000px;
    height: 500px;
    top: 50%;
    left: 50%;
    margin-left: -500px; /* margin is -0.5 * dimension */
    margin-top: -250px;
    text-align: center;
   }

  /* Sets the containers height and width */
  .base-timer {
    display: inline-block;
    position: relative;
    height: 400px;
    width: 400px;
    top: -200px;
  }

  /* Removes SVG styling that would hide the time label */
  .base-timer__circle {
    fill: none;
    stroke: none;
  }

  /* The SVG path that displays the timer's progress */
  .base-timer__path-elapsed {
    stroke-width: 7px;
    stroke: grey;
  }

  .base-timer__label {
    position: absolute;
    
    /* Size should match the parent container */
    width: 400px;
    height: 400px;
    
    /* Keep the label aligned to the top */
    top: 0;
    
    /* Create a flexible box that centers content vertically and horizontally */
    display: flex;
    align-items: center;
    justify-content: center;

    /* Sort of an arbitrary number; adjust to your liking */
    font-size: 120px;
  }

  .base-timer__path-remaining {
    /* Just as thick as the original ring */
    stroke-width: 7px;

    /* Rounds the line endings to create a seamless circle */
    stroke-linecap: round;

    /* Makes sure the animation starts at the top of the circle */
    transform: rotate(90deg);
    transform-origin: center;

    /* One second aligns with the speed of the countdown timer */
    transition: .2s linear all;

    /* Allows the ring to change color when the color value updates */
    stroke: green;
  }

  .base-timer__svg {
    /* Flips the svg and makes the animation to move left-to-right */
    transform: scaleX(-1);
  }